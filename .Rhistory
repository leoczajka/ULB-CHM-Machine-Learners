1 %% 2
0 %% 2
11 %% 2
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
?conditionalPanel
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
runApp()
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/south-african-wealth-tax-simulator')
shiny::runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/sa-wealth-tax')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/sa-wealth-tax')
library(rconnect)
library(rdconnect)
library(rsconnect)
getwd()
deployApp("/Users/leoczajka/Dropbox (Leo_and_Co)/SA_inequality_project/app/sa-wealth-tax", account = "world-wealth-and-income-database")
shiny::runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/sa-wealth-tax')
library(rsconnect)
deployApp("/Users/leoczajka/Dropbox (Leo_and_Co)/SA_inequality_project/app/sa-wealth-tax", account = "world-wealth-and-income-database")
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/sa-wealth-tax')
runApp('Dropbox (Leo_and_Co)/SA_inequality_project/app/sa-wealth-tax')
library(rsconnect)
deployApp("/Users/leoczajka/Dropbox (Leo_and_Co)/SA_inequality_project/app/sa-wealth-tax", account = "world-wealth-and-income-database")
plot(cars)
plot(cars)
plot(cars)
plot(cars)
plot(cars)
plot(cars)
plot(cars)
sum(iris)
iris
rm(list = ls())
train_values <- read.csv("trainingsetvalues.csv")
train_labels <- read.csv("trainingsetlabels.csv")
df <- merge(train_values, train_labels)
test_values <- read.csv("testsetvalues.csv")
rm(list = ls())
if (Sys.info()[8] == "leoczajka") {
setwd("/Users/leoczajka/Dropbox (Leo_and_Co)/Research/learning/Doctoral Training/machine-learning/ULB-CHM-Machine-Learners")
}
if (Sys.info()[8] == "??") {
setwd("~/BioInformatique/MA1/Q2/machine learning/projet")
}
if (Sys.info()[8] == "??") {
setwd("~/RProjects/Pumpit")
}
rm(list = ls())
train_values <- read.csv("trainingsetvalues.csv")
train_labels <- read.csv("trainingsetlabels.csv")
df <- merge(train_values, train_labels)
test_values <- read.csv("testsetvalues.csv")
library(Hmisc)
library(tidyverse)
library(dplyr)
hist(df$longitude)
sum(df$longitude==0)/nrow(df)
hist(df$latitude)
sum(df$latitude==0)
hist(df$gps_height)
sum(df$gps_height==0)
df <- df %>% filter(df$longitude==0)
rm(list = ls())
train_values <- read.csv("trainingsetvalues.csv")
train_labels <- read.csv("trainingsetlabels.csv")
df <- merge(train_values, train_labels)
test_values <- read.csv("testsetvalues.csv")
library(Hmisc)
library(tidyverse)
library(dplyr)
describe(df)
hist(df$longitude)
sum(df$longitude==0)/nrow(df)
hist(df$latitude)
sum(df$latitude==0)
hist(df$gps_height)
sum(df$gps_height==0)
df <- df %>% filter(df$longitude!=0)
sum(df$population==0)/nrow(df)
sum(df$population==1)/nrow(df)
hist(df$population)
hist(df$population[df$population>1 & df$population <500], breaks = seq(from=1, to=501, by=10))
hist(df$amount_tsh)
hist(df$amount_tsh[df$amount_tsh>0 & df$amount_ts <1000])
sum(df$amount_tsh==0)/nrow(df)
table(df$status_group)
sum(df$construction_year==0)/nrow(df)
describe(df$construction_year[df$construction_year!=0])
df$construction_year[df$construction_year==0] <- 2000
df$m_date <- as.Date(df$date_recorded)
df$daily_time_trend <- as.numeric(df$m_date) # remove the too early ones
hist(df$daily_time_trend)
table(f$daily_time_trend)
df <- df %>% filter(df$daily_time_trend>=14977)
hist(df$daily_time_trend[df$daily_time_trend>14942], breaks = seq(from=14942, to=16042, by=10))
df$m_year <- as.factor(as.numeric(format(df$m_date,'%Y')))
df$m_months <- as.factor(as.numeric(format(df$m_date,'%m')))
df$m_day <- as.factor(weekdays(df$m_date))
df$installer <- tolower(df$installer)
df$funder <- tolower(df$funder)
df$funder_is_installer <- df$funder == df$installer & df$installer!=""
df$funder_is_installer[df$installer=="" | df$funder==""] <- "MISSING"
table(df$funder_is_installer)
test_values <- test_values %>% filter(test_values$longitude!=0)
test_values$construction_year[test_values$construction_year==0] <- 2000
test_values$m_date <- as.Date(test_values$date_recorded)
test_values$daily_time_trend <- as.numeric(test_values$m_date)
test_values <- test_values %>% filter(test_values$daily_time_trend>=14977)
test_values$m_year <- as.factor(as.numeric(format(test_values$m_date,'%Y')))
test_values$m_months <- as.factor(as.numeric(format(test_values$m_date,'%m')))
test_values$m_day <- as.factor(weekdays(test_values$m_date))
test_values$installer <- tolower(test_values$installer)
test_values$funder <- tolower(test_values$funder)
test_values$funder_is_installer <- test_values$funder == test_values$installer & test_values$installer!=""
test_values$funder_is_installer[test_values$installer=="" | test_values$funder==""] <- "MISSING"
describe(df$basin)
table(df$basin)
table(df$region_code, df$district_code)
table(df$lga)
describe(df$lga)
describe(df$ward)
table(df$lga)
describe(df$ward)
describe(df$subvillage)
table(df$region, df$region_code)
df<- df[, !(colnames(df) %in% c("ward", "subvillage"))]
df<- df[, !(colnames(df) %in% c("recorded_by", "num_private"))]
describe(df$scheme_name)
rm(list = ls())
if (Sys.info()[8] == "leoczajka") {
setwd("/Users/leoczajka/Dropbox (Leo_and_Co)/Research/learning/Doctoral Training/machine-learning/ULB-CHM-Machine-Learners")
}
if (Sys.info()[8] == "??") {
setwd("~/BioInformatique/MA1/Q2/machine learning/projet")
}
if (Sys.info()[8] == "??") {
setwd("~/RProjects/Pumpit")
}
rm(list = ls())
train_values <- read.csv("trainingsetvalues.csv")
train_labels <- read.csv("trainingsetlabels.csv")
df <- merge(train_values, train_labels)
test_values <- read.csv("testsetvalues.csv")
library(Hmisc)
library(tidyverse)
library(dplyr)
describe(df)
describe(df$num_private)
describe(df$recorded_by)
df<- df[, !(colnames(df) %in% c("recorded_by", "num_private", "wpt_name"))]
hist(df$longitude)
sum(df$longitude==0)/nrow(df)
hist(df$latitude)
sum(df$latitude==0)
hist(df$gps_height)
sum(df$gps_height==0)
df <- df %>% filter(df$longitude!=0)
sum(df$population==0)/nrow(df)
sum(df$population==1)/nrow(df)
hist(df$population)
hist(df$population[df$population>1 & df$population <500], breaks = seq(from=1, to=501, by=10))
hist(df$amount_tsh)
hist(df$amount_tsh[df$amount_tsh>0 & df$amount_ts <1000])
sum(df$amount_tsh==0)/nrow(df)
table(df$status_group)
sum(df$construction_year==0)/nrow(df)
describe(df$construction_year[df$construction_year!=0])
df$construction_year[df$construction_year==0] <- 2000
df$m_date <- as.Date(df$date_recorded)
df$daily_time_trend <- as.numeric(df$m_date) # remove the too early ones
hist(df$daily_time_trend)
table(f$daily_time_trend)
df <- df %>% filter(df$daily_time_trend>=14977)
hist(df$daily_time_trend[df$daily_time_trend>14942], breaks = seq(from=14942, to=16042, by=10))
df$m_year <- as.factor(as.numeric(format(df$m_date,'%Y')))
df$m_months <- as.factor(as.numeric(format(df$m_date,'%m')))
df$m_day <- as.factor(weekdays(df$m_date))
df$age <- df$m_year - df$construction_year
sum(df$construction_year==0)/nrow(df)
describe(df$construction_year[df$construction_year!=0])
df$construction_year[df$construction_year==0] <- 2000
df$m_date <- as.Date(df$date_recorded)
df$daily_time_trend <- as.numeric(df$m_date) # remove the too early ones
hist(df$daily_time_trend)
table(f$daily_time_trend)
df <- df %>% filter(df$daily_time_trend>=14977)
hist(df$daily_time_trend[df$daily_time_trend>14942], breaks = seq(from=14942, to=16042, by=10))
df$m_year <- as.factor(as.numeric(format(df$m_date,'%Y')))
df$m_months <- as.factor(as.numeric(format(df$m_date,'%m')))
df$m_day <- as.factor(weekdays(df$m_date))
table(df$daily_time_trend)
df$age <- df$m_year - df$construction_year
df$age <- as.numeric(df$m_year) - df$construction_year
df$age
df$m_year
df$construction_year
df$age
table(df$age)
df$age <- as.numeric(df$m_year) - df$construction_year
df$age
df$m_year
df$construction_year
View(df)
View(df$m_year, df$construction_year )
5-3
as.numeric(df$m_year)
as.numeric(format(test_values$m_date,'%Y'))
test_values$m_year <- as.numeric(format(test_values$m_date,'%Y'))
test_values$m_year <- as.numeric(format(test_values$m_date,'%Y'))
test_values$age <- test_values$m_year - test_values$construction_year
test_values$age
format(test_values$m_date,'%Y')
test_values$m_months
test_values<- test_values[, !(colnames(test_values) %in% c("recorded_by", "num_private", "wpt_name"))]
test_values <- test_values %>% filter(test_values$longitude!=0)
test_values$construction_year[test_values$construction_year==0] <- 2000
test_values$m_date <- as.Date(test_values$date_recorded)
test_values$daily_time_trend <- as.numeric(test_values$m_date)
test_values <- test_values %>% filter(test_values$daily_time_trend>=14977)
test_values$m_months <- as.factor(as.numeric(format(test_values$m_date,'%m')))
test_values$m_day <- as.factor(weekdays(test_values$m_date))
test_values$m_year <- as.numeric(format(test_values$m_date,'%Y'))
test_values$age <- test_values$m_year - test_values$construction_year
test_values$age
table(test_values$age)
rm(list = ls())
if (Sys.info()[8] == "leoczajka") {
setwd("/Users/leoczajka/Dropbox (Leo_and_Co)/Research/learning/Doctoral Training/machine-learning/ULB-CHM-Machine-Learners")
}
if (Sys.info()[8] == "??") {
setwd("~/BioInformatique/MA1/Q2/machine learning/projet")
}
if (Sys.info()[8] == "??") {
setwd("~/RProjects/Pumpit")
}
train_values <- read.csv("trainingsetvalues.csv")
train_labels <- read.csv("trainingsetlabels.csv")
df <- merge(train_values, train_labels)
test_values <- read.csv("testsetvalues.csv")
library(Hmisc)
library(tidyverse)
library(dplyr)
describe(df$num_private)
describe(df$recorded_by)
df<- df[, !(colnames(df) %in% c("recorded_by", "num_private", "wpt_name"))]
hist(df$longitude)
sum(df$longitude==0)/nrow(df)
hist(df$latitude)
sum(df$latitude==0)
hist(df$gps_height)
sum(df$gps_height==0)
df <- df %>% filter(df$longitude!=0)
sum(df$population==0)/nrow(df)
sum(df$population==1)/nrow(df)
hist(df$population)
hist(df$population[df$population>1 & df$population <500], breaks = seq(from=1, to=501, by=10))
hist(df$amount_tsh)
hist(df$amount_tsh[df$amount_tsh>0 & df$amount_ts <1000])
sum(df$amount_tsh==0)/nrow(df)
table(df$status_group)
sum(df$construction_year==0)/nrow(df)
describe(df$construction_year[df$construction_year!=0])
df$construction_year[df$construction_year==0] <- 2000
df$m_date <- as.Date(df$date_recorded)
df$daily_time_trend <- as.numeric(df$m_date) # remove the too early ones
hist(df$daily_time_trend)
table(df$daily_time_trend)
df <- df %>% filter(df$daily_time_trend>=14977)
hist(df$daily_time_trend[df$daily_time_trend>14942], breaks = seq(from=14942, to=16042, by=10))
df$m_months <- as.factor(as.numeric(format(df$m_date,'%m')))
df$m_day <- as.factor(weekdays(df$m_date))
df$m_year <- as.numeric(format(df$m_date,'%Y'))
df$age <- df$m_year - df$construction_year
df$m_year <- as.factor(as.numeric(format(df$m_date,'%Y')))
df$age <- as.numeric(df$m_year) - df$construction_year
table(df$basin)
table(df$region, df$region_code)
table(df$district_code)
table(df$region_code)
table(df$lga)
describe(df$ward)
describe(df$subvillage)
df<- df[, !(colnames(df) %in% c("ward", "subvillage"))]
table(df$extraction_type, df$extraction_type_group)
table(df$extraction_type_group, df$extraction_type_class)
table(df$management, df$management_group )
table(df$payment,df$payment_type )
table(df$water_quality,df$quality_group )
table(df$quantity, df$quantity_group)
table(df$source, df$source_type )
table(df$source_type,df$source_class )
table(df$waterpoint_type,df$waterpoint_type_group )
df$installer <- tolower(df$installer)
df$funder <- tolower(df$funder)
df$funder_is_installer <- df$funder == df$installer & df$installer!=""
df$funder_is_installer[df$installer=="" | df$funder==""] <- "MISSING"
table(df$funder_is_installer)
test_values<- test_values[, !(colnames(test_values) %in% c("recorded_by", "num_private", "wpt_name"))]
test_values <- test_values %>% filter(test_values$longitude!=0)
test_values$construction_year[test_values$construction_year==0] <- 2000
test_values$m_date <- as.Date(test_values$date_recorded)
test_values$daily_time_trend <- as.numeric(test_values$m_date)
test_values <- test_values %>% filter(test_values$daily_time_trend>=14977)
test_values$m_months <- as.factor(as.numeric(format(test_values$m_date,'%m')))
test_values$m_day <- as.factor(weekdays(test_values$m_date))
test_values$m_year <- as.numeric(format(test_values$m_date,'%Y'))
test_values$age <- test_values$m_year - test_values$construction_year
test_values$m_year <- as.factor(as.numeric(format(test_values$m_date,'%Y')))
test_values<- test_values[, !(colnames(test_values) %in% c("ward", "subvillage"))]
test_values$installer <- tolower(test_values$installer)
test_values$funder <- tolower(test_values$funder)
test_values$funder_is_installer <- test_values$funder == test_values$installer & test_values$installer!=""
test_values$funder_is_installer[test_values$installer=="" | test_values$funder==""] <- "MISSING"
rm(list = ls())
if (Sys.info()[8] == "leoczajka") {
setwd("/Users/leoczajka/Dropbox (Leo_and_Co)/Research/learning/Doctoral Training/machine-learning/ULB-CHM-Machine-Learners")
}
if (Sys.info()[8] == "??") {
setwd("~/BioInformatique/MA1/Q2/machine learning/projet")
}
if (Sys.info()[8] == "??") {
setwd("~/RProjects/Pumpit")
}
train_values <- read.csv("trainingsetvalues.csv")
train_labels <- read.csv("trainingsetlabels.csv")
df <- merge(train_values, train_labels)
test_values <- read.csv("testsetvalues.csv")
library(Hmisc)
library(tidyverse)
library(dplyr)
describe(df$num_private)
describe(df$recorded_by)
df<- df[, !(colnames(df) %in% c("recorded_by", "num_private", "wpt_name"))]
hist(df$longitude)
sum(df$longitude==0)/nrow(df)
hist(df$latitude)
sum(df$latitude==0)
hist(df$gps_height)
sum(df$gps_height==0)
# df <- df %>% filter(df$longitude!=0)
sum(df$construction_year==0)/nrow(df)
describe(df$construction_year[df$construction_year!=0])
df$construction_year[df$construction_year==0] <- 2000
df$m_date <- as.Date(df$date_recorded)
df$daily_time_trend <- as.numeric(df$m_date) # remove the too early ones
hist(df$daily_time_trend)
table(df$daily_time_trend)
# df <- df %>% filter(df$daily_time_trend>=14977)
hist(df$daily_time_trend[df$daily_time_trend>14942], breaks = seq(from=14942, to=16042, by=10))
df$m_months <- as.factor(as.numeric(format(df$m_date,'%m')))
df$m_day <- as.factor(weekdays(df$m_date))
df$m_year <- as.numeric(format(df$m_date,'%Y'))
df$age <- df$m_year - df$construction_year
df$m_year <- as.factor(as.numeric(format(df$m_date,'%Y')))
df$age <- as.numeric(df$m_year) - df$construction_year
table(df$basin)
table(df$region, df$region_code)
table(df$district_code)
table(df$region_code)
table(df$lga)
describe(df$ward)
describe(df$subvillage)
df<- df[, !(colnames(df) %in% c("ward", "subvillage"))]
df$installer <- tolower(df$installer)
df$funder <- tolower(df$funder)
df$funder_is_installer <- df$funder == df$installer & df$installer!=""
df$funder_is_installer[df$installer=="" | df$funder==""] <- "MISSING"
table(df$funder_is_installer)
test_values<- test_values[, !(colnames(test_values) %in% c("recorded_by", "num_private", "wpt_name"))]
# test_values <- test_values %>% filter(test_values$longitude!=0)
test_values$construction_year[test_values$construction_year==0] <- 2000
test_values$m_date <- as.Date(test_values$date_recorded)
test_values$daily_time_trend <- as.numeric(test_values$m_date)
# test_values <- test_values %>% filter(test_values$daily_time_trend>=14977)
test_values$m_months <- as.factor(as.numeric(format(test_values$m_date,'%m')))
test_values$m_day <- as.factor(weekdays(test_values$m_date))
test_values$m_year <- as.numeric(format(test_values$m_date,'%Y'))
test_values$age <- test_values$m_year - test_values$construction_year
test_values$m_year <- as.factor(as.numeric(format(test_values$m_date,'%Y')))
test_values<- test_values[, !(colnames(test_values) %in% c("ward", "subvillage"))]
test_values$installer <- tolower(test_values$installer)
test_values$funder <- tolower(test_values$funder)
test_values$funder_is_installer <- test_values$funder == test_values$installer & test_values$installer!=""
test_values$funder_is_installer[test_values$installer=="" | test_values$funder==""] <- "MISSING"
chisq.test(df$status_group, df$source, correct=FALSE)
chisq.test(df$status_group, df$cyl)
chisq.test(df$status_group, df$funder)
chisq.test(df$status_group, df$installer)
chisq.test(df$status_group, df$basin)
chisq.test(df$status_group, df$region)
chisq.test(df$status_group, df$region_code)
chisq.test(df$status_group, df$district_code)
chisq.test(df$status_group, df$public_meeting)
chisq.test(df$status_group, df$scheme_management)
chisq.test(df$status_group, df$permit)
chisq.test(df$status_group, df$extraction_type)
chisq.test(df$status_group, df$extraction_type_group)
chisq.test(df$status_group, df$extraction_type_class)
chisq.test(df$status_group, df$management)
chisq.test(df$status_group, df$management_group)
chisq.test(df$status_group, df$payment)
chisq.test(df$status_group, df$payment_type)
chisq.test(df$status_group, df$water_quality)
chisq.test(df$status_group, df$quality_group)
chisq.test(df$status_group, df$quantity)
chisq.test(df$status_group, df$quantity_group)
chisq.test(df$status_group, df$source)
chisq.test(df$status_group, df$source_type)
chisq.test(df$status_group, df$source_class)
chisq.test(df$status_group, df$waterpoint_type)
chisq.test(df$status_group, df$waterpoint_type_group)
chisq.test(df$status_group, df$management_group)
chisq.test(df$status_group, df$management)
chisq.test(df$status_group, df$m_months)
chisq.test(df$status_group, df$m_day)
rm(list = ls())
if (Sys.info()[8] == "leoczajka") {
setwd("/Users/leoczajka/Dropbox (Leo_and_Co)/Research/learning/Doctoral Training/machine-learning/ULB-CHM-Machine-Learners")
}
if (Sys.info()[8] == "??") {
setwd("~/BioInformatique/MA1/Q2/machine learning/projet")
}
if (Sys.info()[8] == "??") {
setwd("~/RProjects/Pumpit")
}
train_values <- read.csv("trainingsetvalues.csv")
train_labels <- read.csv("trainingsetlabels.csv")
df <- merge(train_values, train_labels)
test_values <- read.csv("testsetvalues.csv")
library(Hmisc)
library(tidyverse)
library(dplyr)
describe(df)
describe(df$num_private)
describe(df$recorded_by)
df<- df[, !(colnames(df) %in% c("recorded_by", "num_private", "wpt_name"))]
hist(df$longitude)
sum(df$longitude==0)/nrow(df)
hist(df$latitude)
sum(df$latitude==0)
hist(df$gps_height)
sum(df$gps_height==0)
df <- df %>% filter(df$longitude!=0)
sum(df$population==0)/nrow(df)
sum(df$population==1)/nrow(df)
hist(df$population)
hist(df$population[df$population>1 & df$population <500], breaks = seq(from=1, to=501, by=10))
hist(df$amount_tsh)
hist(df$amount_tsh[df$amount_tsh>0 & df$amount_ts <1000])
sum(df$amount_tsh==0)/nrow(df)
table(df$status_group)
sum(df$construction_year==0)/nrow(df)
describe(df$construction_year[df$construction_year!=0])
df$construction_year[df$construction_year==0] <- 2000
df$m_date <- as.Date(df$date_recorded)
df$daily_time_trend <- as.numeric(df$m_date) # remove the too early ones
hist(df$daily_time_trend)
table(df$daily_time_trend)
df <- df %>% filter(df$daily_time_trend>=14977)
hist(df$daily_time_trend[df$daily_time_trend>14942], breaks = seq(from=14942, to=16042, by=10))
df$m_months <- as.factor(as.numeric(format(df$m_date,'%m')))
df$m_day <- as.factor(weekdays(df$m_date))
df$m_year <- as.numeric(format(df$m_date,'%Y'))
df$age <- df$m_year - df$construction_year
df$m_year <- as.factor(as.numeric(format(df$m_date,'%Y')))
df$age <- as.numeric(df$m_year) - df$construction_year
df<- df[, !(colnames(df) %in% c("date_recorded"))]
table(df$basin)
table(df$region, df$region_code)
table(df$district_code)
table(df$region_code)
table(df$lga)
describe(df$ward)
describe(df$subvillage)
df<- df[, !(colnames(df) %in% c("ward", "subvillage"))]
train_values <- read.csv("trainingsetvalues.csv")
train_labels <- read.csv("trainingsetlabels.csv")
df <- merge(train_values, train_labels)
test_values <- read.csv("testsetvalues.csv")
library(Hmisc)
library(tidyverse)
library(dplyr)
describe(df)
describe(df$num_private)
describe(df$recorded_by)
df<- df[, !(colnames(df) %in% c("recorded_by", "num_private", "wpt_name"))]
hist(df$longitude)
sum(df$longitude==0)/nrow(df)
hist(df$latitude)
sum(df$latitude==0)
hist(df$gps_height)
sum(df$gps_height==0)
df <- df %>% filter(df$longitude!=0)
sum(df$population==0)/nrow(df)
sum(df$population==1)/nrow(df)
hist(df$population)
hist(df$population[df$population>1 & df$population <500], breaks = seq(from=1, to=501, by=10))
hist(df$amount_tsh)
hist(df$amount_tsh[df$amount_tsh>0 & df$amount_ts <1000])
sum(df$amount_tsh==0)/nrow(df)
table(df$status_group)
